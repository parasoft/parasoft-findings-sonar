CppTestReportPathDesc=Path (absolute or relative) to C/C++Test XML report files.
CppTestReportPathName=Parasoft C/C++Test Report Files
CreatedIssues=Created: {0} issues in: {1}
dotTestName=Parasoft dotTest
dotTestReportPathDesc=Path (absolute or relative) to dotTest XML report files.
dotTestReportPathName=Parasoft dotTest Report Files
FindingsImported={0} findings imported
JtestName=Parasoft Jtest
JtestReportPathDesc=Path (absolute or relative) to Jtest XML report files.
JtestReportPathName=Parasoft Jtest Report Files
NoDescription=No description
NoFindingsFor=No findings for: {0}
NoReportFile=XML report file not found: {0}
NoSourcesFound=No source files found
NotLoadingRules=Not loading rules for {0} because {1} is not found
ParsingReportFile=Parsing Parasoft {0} XML report: {1}
PluginName=Findings for {0}
RuleDocNotFound=Rule documentation not available
RuleDocNotFoundAt=Rule documentation not available at {0}
RuleNotFound=Rule {0} is not active or does not exist in {1}. Set a Quality profile that includes Parasoft rules as active.
UnknownRuleName=Unknown rule
UnsupportedFindingLanguage=Ignoring finding: {0} for unsupported language: {1}
CoverageReportPathName=Parasoft Coverage Report Files
CoverageReportPathDesc=Path (absolute or relative) to Parasoft coverage XML report files.
CoverageSubCategory=Parasoft Code Coverage
UploadCodeCoverageData=Uploading code coverage data: {0}
SkippedInvalidReportFile=Skipped invalid Parasoft {0} XML report: {1}
TransformedReport=Transformed report file: {0} to {1}
FailedToTransformReport=Failed to transform report file: {0}
FailedToLoadCoberturaReport=Failed to upload Cobertura report: {0}
FileNotFoundInProject=File: {0} is not found in project.
NoValidReportsFound=No valid Parasoft {0} report found.
InvalidCoberturaCoverageReport=Invalid Cobertura report: {0}.
InvalidReport=Invalid report: {0}.
NotMatchedCoverageReportAndProject=Failed to match source files specified in the coverage report(s) with the project.
NoValidCoberturaReport=No valid Cobertura report found. Please try recreating the report. If this does not resolve the issue, please contact Parasoft support.
SOAtestReportPathName=Parasoft SOAtest Report Files
SOAtestReportPathDesc=Path (absolute or relative) to Parasoft SOAtest XML report files.
ConvertingParasoftReportsToXUnitReports=Converting Parasoft {0} report(s) to xUnit report(s)...
ConvertingCoverageReportsToCoberturaReports=Converting Parasoft coverage report(s) to Cobertura report(s)...
ConvertingReport=Converting report: {0}
ParsingXUnitReport=Parsing xUnit report: {0}
FailedToParseXUnitReport=Failed to parse the xUnit report: {0}
TotalDurationNotAccurateWithNegativeTimeTests=There are {0} test(s) reported with negative time by xUnit, the total duration may not be accurate.
ResourceNotFound=Resource not found: {0}
ParasoftReportNotSpecified=Parasoft {0} report(s) not specified
UnitTestResults=Total: {0}, Errors: {1}, Failures: {2}, Duration: {3}ms
SkipAddingUnitTestMeasuresForFile=Skipping adding unit test measures since the measures have already been added on: {0}
AddedUnitTestsForProjectSummary=Added Unit test(s) for project: {0}
AddedSOAtestTestsForProjectSummary=Added SOAtest test(s) for project: {0}
CollectedUnitTestsForFile=Collected location with unit test(s): {0}
CollectedSOAtestTestsForFile=Collected location with SOAtest test(s): {0}
UnitTest=unit test
SOAtest=SOAtest
Coverage=coverage
StaticAnalysis=static analysis