CppTestReportPathDesc=Path (absolute or relative) to C/C++Test XML report files.
CppTestReportPathName=Parasoft C/C++Test Report Files
CreatedIssues=Created {0} issues in: {1}
dotTestReportPathDesc=Path (absolute or relative) to dotTest XML report files.
dotTestReportPathName=Parasoft dotTest Report Files
FindingsImported={0} findings imported
JtestReportPathDesc=Path (absolute or relative) to Jtest XML report files.
JtestReportPathName=Parasoft Jtest Report Files
NoDescription=No description
NoFindingsFor=No findings for: {0}
NoReportFile=XML report file not found: {0}
NoSourcesFound=No source files found
NotLoadingRules=Not loading rules for {0} because {1} is not found
ParsingReportFile=Parsing Parasoft {0} XML report: {1}
PluginName={0} Importer
RuleDocNotFound=Rule documentation not available
RuleDocNotFoundAt=Rule documentation not available at {0}
RuleNotFound=Rule {0} is not active or does not exist in {1}. Set a Quality profile that includes Parasoft rules as active.
UnknownRuleName=Unknown rule
UnsupportedFindingLanguage=Ignoring finding: {0} for unsupported language: {1}
CoverageReportPathName=Parasoft Coverage Report Files
CoverageReportPathDesc=Path (absolute or relative) to Parasoft coverage XML report files.
CoverageSubCategory=Parasoft Code Coverage
UploadCodeCoverageData=Uploading code coverage data: {0}
UploadedCodeCoverageData=Uploaded code coverage data.
SkippedInvalidReportFile=Skipped invalid Parasoft {0} XML report: {1}
TransformedReport=Transformed to: {0}
FailedToTransformReport=Failed to transform report file: {0}
FailedToLoadCoberturaReport=Failed to upload Cobertura report: {0}
FileNotFoundInProject=File: {0} is not found in project.
NoValidReportsFound=No valid Parasoft {0} report found.
InvalidCoberturaCoverageReport=Invalid Cobertura report: {0}.
SkippedInvalidReport=Skipped invalid report: {0}.
NotMatchedCoverageReportAndProject=Failed to match source files specified in the coverage report(s) with the project.
NoValidCoberturaReport=No valid Cobertura report found. Please try recreating the report. If this does not resolve the issue, please contact Parasoft support.
SOAtestReportPathName=Parasoft SOAtest Report Files
SOAtestReportPathDesc=Path (absolute or relative) to Parasoft SOAtest XML report files.
TransformingParasoftReportsToXUnitReports=Transforming Parasoft {0} report(s) to xUnit report(s)...
TransformingCoverageReportsToCoberturaReports=Transforming Parasoft coverage report(s) to Cobertura report(s)...
TransformingReport=Transforming report: {0}
ParsingXUnitReport=Parsing xUnit report: {0}
FailedToParseXUnitReport=Failed to parse the xUnit report: {0}
ResourceNotFound=Resource not found: {0}
ParasoftReportNotSpecified=No Parasoft {0} report(s) specified
UnitTestResults=Total: {0}, Errors: {1}, Failures: {2}, Duration: {3}ms
SkipAddingUnitTestResultsForFile=Skipped adding Parasoft unit test results because results are already present for: {0}
AddedUnitTestsForProjectSummary=Added Parasoft unit test results for project: {0}
AddedSOAtestTestsForProjectSummary=Added SOAtest test results for project: {0}
AddedUnitTestResultsForFile=Added Parasoft unit test results for: {0}
AddedSOAtestTestResultsForFile=Added SOAtest test results for: {0}
UnitTest=unit test
SOAtest=SOAtest
Coverage=coverage
StaticAnalysis=static analysis